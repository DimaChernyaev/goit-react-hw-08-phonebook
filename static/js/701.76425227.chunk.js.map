{"version":3,"file":"static/js/701.76425227.chunk.js","mappings":"iaAGaA,EAAaC,EAAAA,EAAAA,OAAH,0ZAuBVC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,uIAQRG,GAAYH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,6JASTK,EAAYL,EAAAA,EAAAA,MAAH,yHAOTM,EAAiBN,EAAAA,EAAAA,KAAH,0GAOdO,EAAsBP,EAAAA,EAAAA,IAAH,uGAOnBQ,EAAkBR,EAAAA,EAAAA,IAAH,qEAKfS,EAAgBT,EAAAA,EAAAA,GAAH,oEAKbU,EAAeV,EAAAA,EAAAA,EAAH,gE,8ICxDnBW,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CJ,MAAOG,EAAAA,KAEJH,QACAK,IAAI,EAAG,6CACPC,SAAS,sDACZL,SAAUE,EAAAA,KAEPE,IAAI,EAAG,gDACPC,SAAS,2DAgDd,UA7CkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,EAAe,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEdP,GAASQ,EAAAA,EAAAA,IAAUF,IAFL,OAGpBC,IAEc,OAAVL,GACFO,EAAAA,GAAAA,MAAY,qDANM,gDASpBC,QAAQC,IAAR,MAToB,yDAAH,wDAarB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAASC,SAAS,gBAClB,SAAC,KAAD,UAAe,gBACf,SAAC,KAAD,CACEpB,cAAeA,EACfqB,SAAUR,EACVV,iBAAkBA,EAHpB,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAgB,WAChB,SAAC,KAAD,CAAWmB,KAAK,QAAQC,KAAK,WAC7B,SAAC,KAAD,CAAcA,KAAK,OAAOC,UAAW5B,EAAAA,SAEvC,UAAC,KAAD,YACE,SAAC,KAAD,UAAgB,cAChB,SAAC,KAAD,CAAW0B,KAAK,WAAWC,KAAK,cAChC,SAAC,KAAD,CAAcA,KAAK,SAASC,UAAW5B,EAAAA,SAEzC,SAAC,KAAD,CAAY0B,KAAK,SAAjB,SAA0B,gBAG9B,SAAC,KAAD,UAAc,+CAGnB,C","sources":["components/pageStyled/AutorizationForm.styled.js","pages/LoginForm/LoginForm.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const ButtonAuth = styled.button`\n  margin-top: 16px;\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n  padding: 8px 20px;\n  font-weight: 400;\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n\n  background-color: white;\n  border: 2px solid goldenrod;\n  border-radius: 8px;\n  cursor: pointer;\n\n  transition: border-color 250ms linear;\n\n  &:hover {\n    border-color: black;\n  }\n`;\n\nexport const FormAuth = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const InputAuth = styled(Field)`\n  padding: 5px 12px;\n  border-color: goldenrod;\n  border-radius: 8px;\n  width: 350px;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const LabelAuth = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InputTitleAuth = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  color: black;\n  margin-bottom: 5px;\n`;\n\nexport const ValidationErrorAuth = styled.div`\n  max-width: 300px;\n  text-align: center;\n  color: red;\n  font-size: 12px;\n`;\n\nexport const FormAuthWrapper = styled.div`\n  padding-top: 40px;\n  text-align: center;\n`;\n\nexport const FormAuthTitle = styled.h2`\n  font-size: 28px;\n  margin-bottom: 30px;\n`;\n\nexport const TextFormAuth = styled.p`\n  font-size: 16px;\n  margin-top: 20px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from 'redux/authLogics/operationAuth';\nimport {\n  ButtonAuth,\n  LabelAuth,\n  FormAuth,\n  InputAuth,\n  InputTitleAuth,\n  ValidationErrorAuth,\n  FormAuthTitle,\n  FormAuthWrapper,\n  TextFormAuth,\n} from 'components/pageStyled/AutorizationForm.styled';\nimport * as yup from 'yup';\nimport { selectError } from 'redux/authLogics/selectorsAuth';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .min(6, 'Your email must be at least 6 characters.')\n    .required('Email is a required field! Please, fill the field.'),\n  password: yup\n    .string()\n    .min(4, 'Your password must be at least 4 characters.')\n    .required('Password is a required field! Please, fill the field.'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const handleLoginUser = async (values, { resetForm }) => {\n    try {\n      await dispatch(loginUser(values));\n      resetForm();\n\n      if (error !== null) {\n        toast.error('Password or email is incorrect, please try again!');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <FormAuthWrapper>\n      <Toaster position=\"top-center\" />\n      <FormAuthTitle>Login Form</FormAuthTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleLoginUser}\n        validationSchema={validationSchema}\n      >\n        <FormAuth>\n          <LabelAuth>\n            <InputTitleAuth>Email</InputTitleAuth>\n            <InputAuth type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"name\" component={ValidationErrorAuth} />\n          </LabelAuth>\n          <LabelAuth>\n            <InputTitleAuth>Password</InputTitleAuth>\n            <InputAuth type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"number\" component={ValidationErrorAuth} />\n          </LabelAuth>\n          <ButtonAuth type=\"submit\">Login</ButtonAuth>\n        </FormAuth>\n      </Formik>\n      <TextFormAuth>Log in and start managing your contacts!</TextFormAuth>\n    </FormAuthWrapper>\n  );\n};\n\nexport default LoginForm;\n"],"names":["ButtonAuth","styled","FormAuth","Form","InputAuth","Field","LabelAuth","InputTitleAuth","ValidationErrorAuth","FormAuthWrapper","FormAuthTitle","TextFormAuth","initialValues","email","password","validationSchema","yup","shape","min","required","dispatch","useDispatch","error","useSelector","selectError","handleLoginUser","values","resetForm","loginUser","toast","console","log","position","onSubmit","type","name","component"],"sourceRoot":""}
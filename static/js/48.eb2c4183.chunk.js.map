{"version":3,"file":"static/js/48.eb2c4183.chunk.js","mappings":"gaAGaA,EAAaC,EAAAA,EAAAA,OAAH,0ZAuBVC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,uIAQRG,GAAYH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,6JASTK,EAAYL,EAAAA,EAAAA,MAAH,yHAOTM,EAAiBN,EAAAA,EAAAA,KAAH,0GAOdO,EAAsBP,EAAAA,EAAAA,IAAH,uGAOnBQ,EAAkBR,EAAAA,EAAAA,IAAH,qEAKfS,EAAgBT,EAAAA,EAAAA,GAAH,oEAKbU,EAAeV,EAAAA,EAAAA,EAAH,gE,2FC1DnBW,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CL,KAAMI,EAAAA,KAEHE,IAAI,EAAG,4CACPC,SAAS,qDACZN,MAAOG,EAAAA,KAEJH,QACAK,IAAI,EAAG,6CACPC,SAAS,sDACZL,SAAUE,EAAAA,KAEPE,IAAI,EAAG,gDACPC,SAAS,2DAiDd,UA9CqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAe,uBACf,SAAC,KAAD,CACEV,cAAeA,EACfW,SAdwB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACvC,IACEJ,GAASK,EAAAA,EAAAA,IAAgBF,IACzBC,GAGD,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,EAQKX,iBAAkBA,EAHpB,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAgB,UAChB,SAAC,KAAD,CAAWc,KAAK,OAAOjB,KAAK,UAC5B,SAAC,KAAD,CAAcA,KAAK,OAAOkB,UAAWvB,EAAAA,SAEvC,UAAC,KAAD,YACE,SAAC,KAAD,UAAgB,WAChB,SAAC,KAAD,CAAWsB,KAAK,QAAQjB,KAAK,WAC7B,SAAC,KAAD,CAAcA,KAAK,QAAQkB,UAAWvB,EAAAA,SAExC,UAAC,KAAD,YACE,SAAC,KAAD,UAAgB,cAChB,SAAC,KAAD,CAAWsB,KAAK,WAAWjB,KAAK,cAChC,SAAC,KAAD,CAAcA,KAAK,WAAWkB,UAAWvB,EAAAA,SAE3C,SAAC,KAAD,CAAYsB,KAAK,SAAjB,SAA0B,mBAG9B,SAAC,KAAD,UAAc,6EAKnB,C","sources":["components/pageStyled/AutorizationForm.styled.js","pages/RegisterForm/RegisterForm.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const ButtonAuth = styled.button`\n  margin-top: 16px;\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n  padding: 8px 20px;\n  font-weight: 400;\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n\n  background-color: white;\n  border: 2px solid goldenrod;\n  border-radius: 8px;\n  cursor: pointer;\n\n  transition: border-color 250ms linear;\n\n  &:hover {\n    border-color: black;\n  }\n`;\n\nexport const FormAuth = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const InputAuth = styled(Field)`\n  padding: 5px 12px;\n  border-color: goldenrod;\n  border-radius: 8px;\n  width: 350px;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const LabelAuth = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InputTitleAuth = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  color: black;\n  margin-bottom: 5px;\n`;\n\nexport const ValidationErrorAuth = styled.div`\n  max-width: 300px;\n  text-align: center;\n  color: red;\n  font-size: 12px;\n`;\n\nexport const FormAuthWrapper = styled.div`\n  padding-top: 40px;\n  text-align: center;\n`;\n\nexport const FormAuthTitle = styled.h2`\n  font-size: 28px;\n  margin-bottom: 30px;\n`;\n\nexport const TextFormAuth = styled.p`\n  font-size: 16px;\n  margin-top: 20px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { registeringUser } from 'redux/authLogics/operationAuth';\nimport {\n  ButtonAuth,\n  LabelAuth,\n  FormAuth,\n  InputAuth,\n  InputTitleAuth,\n  ValidationErrorAuth,\n  FormAuthTitle,\n  FormAuthWrapper,\n  TextFormAuth,\n} from 'components/pageStyled/AutorizationForm.styled';\nimport * as yup from 'yup';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Your name must be at least 2 characters.')\n    .required('Name is a required field! Please, fill the field.'),\n  email: yup\n    .string()\n    .email()\n    .min(6, 'Your email must be at least 6 characters.')\n    .required('Email is a required field! Please, fill the field.'),\n  password: yup\n    .string()\n    .min(4, 'Your password must be at least 4 characters.')\n    .required('Password is a required field! Please, fill the field.'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleRegisteringUser = (values, { resetForm }) => {\n    try {\n      dispatch(registeringUser(values));\n      resetForm();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <FormAuthWrapper>\n      <FormAuthTitle>Registration form</FormAuthTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleRegisteringUser}\n        validationSchema={validationSchema}\n      >\n        <FormAuth>\n          <LabelAuth>\n            <InputTitleAuth>Name</InputTitleAuth>\n            <InputAuth type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component={ValidationErrorAuth} />\n          </LabelAuth>\n          <LabelAuth>\n            <InputTitleAuth>Email</InputTitleAuth>\n            <InputAuth type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component={ValidationErrorAuth} />\n          </LabelAuth>\n          <LabelAuth>\n            <InputTitleAuth>Password</InputTitleAuth>\n            <InputAuth type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component={ValidationErrorAuth} />\n          </LabelAuth>\n          <ButtonAuth type=\"submit\">Register</ButtonAuth>\n        </FormAuth>\n      </Formik>\n      <TextFormAuth>\n        Only registered users have access to the phone book. Please register!.\n      </TextFormAuth>\n    </FormAuthWrapper>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["ButtonAuth","styled","FormAuth","Form","InputAuth","Field","LabelAuth","InputTitleAuth","ValidationErrorAuth","FormAuthWrapper","FormAuthTitle","TextFormAuth","initialValues","name","email","password","validationSchema","yup","shape","min","required","dispatch","useDispatch","onSubmit","values","resetForm","registeringUser","e","console","log","type","component"],"sourceRoot":""}